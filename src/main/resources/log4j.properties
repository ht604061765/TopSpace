
# Direct log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender
#日志文件存在tomcat的log目录下面
log4j.appender.file.File=${catalina.home}/logs/dlpt.log
log4j.appender.file.MaxFileSize=2MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
 


 #数据库操作日志记录
 #log4j.appender.daoUpdate=org.apache.log4j.RollingFileAppender
log4j.appender.daoUpdate=org.apache.log4j.DailyRollingFileAppender
log4j.appender.daoUpdate.File=${catalina.home}/logs/daoUpdate.log
#log4j.appender.daoUpdate.MaxFileSize=2MB
log4j.appender.daoUpdate.MaxBackupIndex=10
log4j.appender.daoUpdate.layout=org.apache.log4j.PatternLayout
log4j.appender.daoUpdate.DatePattern='.'yyyy-MM-dd
log4j.appender.daoUpdate.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n


 #接口API调用日志
 log4j.appender.apiCall=org.apache.log4j.RollingFileAppender
log4j.appender.apiCall.File=${catalina.home}/logs/apiCall.log
log4j.appender.apiCall.MaxFileSize=2MB
log4j.appender.apiCall.MaxBackupIndex=10
log4j.appender.apiCall.layout=org.apache.log4j.PatternLayout
log4j.appender.apiCall.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n

 #msgSend调用日志
 log4j.appender.msgSend=org.apache.log4j.RollingFileAppender
log4j.appender.msgSend.File=${catalina.home}/logs/msgSend.log
log4j.appender.msgSend.MaxFileSize=2MB
log4j.appender.msgSend.MaxBackupIndex=10
log4j.appender.msgSend.layout=org.apache.log4j.PatternLayout
log4j.appender.msgSend.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n

 #定时任务调用日志
 log4j.appender.task=org.apache.log4j.RollingFileAppender
log4j.appender.task.File=${catalina.home}/logs/task.log
log4j.appender.task.MaxFileSize=2MB
log4j.appender.task.MaxBackupIndex=10
log4j.appender.task.layout=org.apache.log4j.PatternLayout
log4j.appender.task.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n


# 直接输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
 
 #访客日志
log4j.appender.session=org.apache.log4j.DailyRollingFileAppender
log4j.appender.session.File=${catalina.home}/logs/session.log
log4j.appender.session.MaxBackupIndex=10
log4j.appender.session.layout=org.apache.log4j.PatternLayout
log4j.appender.session.DatePattern='.'yyyy-MM-dd
log4j.appender.session.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n


# Root logger option

log4j.rootLogger=info,file,stdout
log4j.additivity.org.apache=false

log4j.logger.org.springframework=info
log4j.logger.org.quartz=info

#将DAO层需要输入到日志的文件级别提高到info,并输出到daoUpdate.log
#log4j.logger.com.toone.core.framework.dao=info,file,daoUpdate
#log4j.additivity.com.toone.core.framework.dao=false

#将API接口层需要输入到日志的文件级别提高到info,并输出到apiCall.log
#log4j.logger.com.toone.o2o.integrate=info,file,apiCall
#log4j.additivity.com.toone.o2o.integrate=false

#将MsgSend接口层需要输入到日志的文件级别提高到info,并输出到msgSend.log
#log4j.logger.com.toone.core.system.msgcenter=info,file,msgSend
#log4j.additivity.com.toone.core.system.msgcenter=false

#将task接口层需要输入到日志的文件级别提高到info,并输出到task.log
#log4j.logger.com.toone.core.system.task=info,file,task
#log4j.additivity.com.toone.core.system.task=false

#将session接口层需要输入到日志的文件级别提高到info,并输出到vistor.log
#log4j.logger.com.toone.core.framework.session=info,file,session
#log4j.additivity.com.toone.core.framework.session=false

log4j.logger.org.apache.ibatis=info,file
log4j.additivity.org.apache.ibatis=false

log4j.logger.java.sql=debug,file,stdout
log4j.logger.com.topspace=debug
